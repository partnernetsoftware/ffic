"English \"String\""
"English String"
"中文字串"
print("English String")
print("中文字串")

@(assert(r),@?(r,print(r),exit("ko")))
assert(@T)

# logic version (slow)
@(fb(n),@?(lt(n,3),1,@+(fb(@-(n,1)),fb(@-(n,2)))))
assert(@=(55,fb(10)))

#tail version O(n)
@(fbi(a,b,count),@?(@==(count,0),b,fbi(@+(a,b),a,@-(count,1))))
#var(fib(n),fbi(1,0,n))
@(fib(n),fbi(1,0,n))
assert(@=(12586269025,fib(50)))


@(fbf(n), @(fbi(a,b,count),@?(@==(count,0),b,fbi(@+(a,b),a,@-(count,1)))), fbi(1,0,n))
fbf(30)
assert(@=(12586269025,fbf(50)))

@^()

# @->(count,
#     @-(1)
# )

@(var,@)
@(nil,@@)
@(true,@T)
@(false,@F)
@(if,@?)
@(add,@+)
@(sub,@-)
@(mul,@*)
@(div,@/)
#@(eq,@=)
@(cmp,@==)
@(same,@===)
@(vector,@V)
@(is_nil,@@?)

@(x,1)
assert(@=(1,x))

var(y,3)
assert(@=(3,y))

@@?(@F)
@==(@F,@@?(@F))

assert(@==(@F,@@?(@F)))

exit("OK")
